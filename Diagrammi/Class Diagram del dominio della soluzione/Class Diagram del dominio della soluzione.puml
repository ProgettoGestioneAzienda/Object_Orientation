@startuml
class GUI.MainDashboard {
- {static} JFrame frame
- {static} ImageIcon img_logo_lr
- {static} Dimension preferredFrameSize
- JPanel dashboardPanel
- JPanel logoPanel
- ImageIcon img_logo_hr
- JLabel logoIcon
- JSplitPane splitPane
- JButton dipendentiIndeterminatiButton
- JButton dipendentiProgettoButton
- JButton scattiButton
- JButton progettiButton
- JButton laboratoriButton
- JButton attrezzatureButton
- JButton afferenzeButton
- JButton lavorareButton
- JMenuBar menuBar
- JMenu helpMenu
- JMenuItem exitMenuItem
+ <<Create>> MainDashboard()
+ {static} void main(String[])
}
enum Model.TipoScatto {
+  Middle
+  Senior
+  Promosso_a_dirigente
+  Rimosso_da_dirigente
}
class ImplementazionePostgresDAO.LavorarePostgresDAO {
- Connection connessione
- ResultSetMetaData metaData
- PreparedStatement preparedStatement
- ResultSet result
- ArrayList<String[]> resultMatrix
+ <<Create>> LavorarePostgresDAO()
+ void addLavorare(String,String)
+ void removeLavorare(String,String)
+ void updateLavorare(String,String,String,String)
+ void obtainLavorare(ArrayList<String>,ArrayList<String>)
+ ArrayList<String[]> getLavorare()
+ ArrayList<String[]> createMatrix(ResultSetMetaData,ResultSet)
}
class ImplementazionePostgresDAO.DipendenteIndeterminatoPostgresDAO {
- Connection connessione
- ResultSetMetaData metaData
- PreparedStatement preparedStatement
- ResultSet result
- ArrayList<String[]> resultMatrix
+ <<Create>> DipendenteIndeterminatoPostgresDAO()
+ void addDipendenteIndeterminato(String,String,String,String,String,String,LocalDate,LocalDate,LocalDate,boolean)
+ void updateDipendenteIndeterminato(String,String,String,String,String,String,String,LocalDate,LocalDate,LocalDate,boolean)
+ void updateStatoDirigente(String,boolean)
+ void updateTipoDipendente(String,String)
+ void updateDatiAnagraficiDipendente(String,String,String,String,String,LocalDate)
+ void updateDataAssunzione(String,LocalDate)
+ void obtainDipendentiIndeterminati(ArrayList<String>,ArrayList<String>,ArrayList<String>,ArrayList<String>,ArrayList<String>,ArrayList<String>,ArrayList<LocalDate>,ArrayList<LocalDate>,ArrayList<LocalDate>,ArrayList<Boolean>)
+ ArrayList<String[]> getDipendentiIndeterminati()
+ ArrayList<String[]> getAllDipendentiCandidatiResponsabileScientifico()
+ ArrayList<String[]> getAllDipendentiCandidatiReferenteScientifico(LocalDate,LocalDate)
+ ArrayList<String[]> getAllDipendentiCandidatiDirigente(LocalDate,LocalDate)
+ ArrayList<String[]> getDipendentiCandidatiScatto(String)
+ ArrayList<String[]> createMatrix(ResultSetMetaData,ResultSet)
}
class GUI.ScattoCarriera {
- {static} ImageIcon img_logo_lr
+ JFrame frame
- JCheckBox dataOdiernaCheckBox
- JButton annullaButton
- JButton okButton
- JComboBox tipoScattoComboBox
- JTextField dataTextField
- JLabel tipoScattoLable
- JLabel dipendenteLable
- JLabel dataLable
- JPanel scattoCarrieraPanel
- JComboBox dipendenteComboBox
- JButton impostaButton
- String vecchioTipoScatto
- String vecchiaMatricola
- LocalDate vecchiaData
- boolean modificaMode
- AggiornaArea callback
+ <<Create>> ScattoCarriera(Controller,JFrame,boolean)
+ void setField(Controller,Object[])
+ void setVecchiaMatricola(String)
+ void setVecchiaData(LocalDate)
+ void setVecchioTipoScatto(String)
+ void setAggiornaArea(AggiornaArea)
}
class GUI.AreaDipendenteIndeterminato {
- {static} ImageIcon img_logo_lr
+ JFrame frame
- JPanel areaDipendenteIndeterminato
- JTable dipendentiIndeterminatiTable
- JButton indietroButton
- JButton aggiungiButton
- JButton modificaButton
- JTextField cercaTextField
- JLabel cercaLabel
- TableModel model
+ <<Create>> AreaDipendenteIndeterminato(Controller,JFrame)
+ void aggiornaSelezione()
+ void aggiornaValori(Controller,String[])
}
class GUI.AreaProgetto {
- {static} ImageIcon img_logo_lr
+ JFrame frame
- JTable progettoTable
- JPanel areaProgettoPanel
- JButton indietroButton
- JButton aggiungiButton
- JButton modificaButton
- JTextField cercaTextField
- JLabel cercaLabel
- TableModel model
+ <<Create>> AreaProgetto(Controller,JFrame)
+ void aggiornaSelezione()
+ void aggiornaValori(Controller,String[])
}
class GUI.Afferenza {
- {static} ImageIcon img_logo_lr
+ JFrame frame
- JComboBox dipendenteComboBox
- JPanel afferenzaPanel
- JComboBox laboratorioComboBox
- JButton annullaButton
- JButton okButton
- JLabel dipendenteLabel
- JLabel laboratorioLabel
- String vecchioNomeLab
- String vecchiaMatricola
- boolean modificaMode
- AggiornaArea callback
+ <<Create>> Afferenza(Controller,JFrame,boolean)
+ void setField(Controller,Object[])
+ void setVecchiaMatricola(String)
+ void setVecchioLaboratorio(String)
+ void setAggiornaArea(AggiornaArea)
}
class Model.DipendenteIndeterminato {
- TipoDipendente tipoDipendente
- boolean dirigente
- LocalDate dataFineRapporto
- ArrayList<ScattoCarriera> scattiEffettuati
- ArrayList<Laboratorio> laboratoriAfferiti
- ArrayList<Laboratorio> laboratoriResponsabileScientifico
- ArrayList<Progetto> progettiReferenteScientifico
- ArrayList<Progetto> progettiResponsabile
+ <<Create>> DipendenteIndeterminato(String,String,String,String,TipoDipendente,LocalDate,LocalDate,boolean)
+ <<Create>> DipendenteIndeterminato(String,String,String,String,TipoDipendente,String,LocalDate,LocalDate,boolean)
+ <<Create>> DipendenteIndeterminato(String,String,String,String,TipoDipendente,LocalDate,LocalDate,LocalDate,boolean)
+ <<Create>> DipendenteIndeterminato(String,String,String,String,TipoDipendente,String,LocalDate,LocalDate,LocalDate,boolean)
+ void setTipoDipendente(TipoDipendente)
+ void setDirigente(boolean)
+ void setDataFineRapporto(LocalDate)
+ void setScattiEffettuati(ArrayList<ScattoCarriera>)
+ void setLaboratoriAfferiti(ArrayList<Laboratorio>)
+ void setLaboratoriResponsabileScientifico(ArrayList<Laboratorio>)
+ void setProgettoReferenteScientifico(ArrayList<Progetto>)
+ void setProgettiResponsabile(ArrayList<Progetto>)
+ TipoDipendente getTipoDipendente()
+ LocalDate getDataFineRapporto()
+ boolean getDirigente()
+ ArrayList<ScattoCarriera> getScattiEffettuati()
+ ArrayList<Laboratorio> getLaboratoriAfferiti()
+ ArrayList<Laboratorio> getLaboratoriResponsabileScientifico()
+ ArrayList<Progetto> getProgettiReferenteScientifico()
+ ArrayList<Progetto> getProgettiResponsabile()
+ boolean addAfferenzaLaboratorio(Laboratorio)
+ boolean removeAfferenzaLaboratorio(Laboratorio)
+ boolean addScattoCarriera(ScattoCarriera)
+ boolean removeScattoCarriera(ScattoCarriera)
+ boolean addLaboratorioResponsabileScientifico(Laboratorio)
+ boolean removeLaboratorioResponsabileScientifico(Laboratorio)
+ boolean addProgettoReferenteScientifico(Progetto)
+ boolean removeProgettoReferenteScientifico(Progetto)
+ boolean addProgettoResponsabile(Progetto)
+ boolean removeProgettoResponsabile(Progetto)
+ boolean equals(Object)
+ String toString()
}
class Model.Attrezzatura {
- Integer idAttrezzatura
- String descrizione
- BigDecimal costo
- Laboratorio laboratorioPossedente
- Progetto progettoProprietario
+ <<Create>> Attrezzatura(Integer,String,BigDecimal,Progetto)
+ <<Create>> Attrezzatura(Integer,String,BigDecimal,Progetto,Laboratorio)
+ void setIdAttrezzatura(Integer)
+ void setDescrizione(String)
+ void setCosto(BigDecimal)
+ void setLaboratorioPossedente(Laboratorio)
+ void setProgettoProprietario(Progetto)
+ Integer getIdAttrezzatura()
+ String getDescrizione()
+ BigDecimal getCosto()
+ Laboratorio getLaboratorioPossedente()
+ Progetto getProgettoProprietario()
+ boolean equals(Object)
+ String toString()
}
class ImplementazionePostgresDAO.LaboratorioPostgresDAO {
- Connection connessione
- ResultSetMetaData metaData
- PreparedStatement preparedStatement
- ResultSet result
- ArrayList<String[]> resultMatrix
+ <<Create>> LaboratorioPostgresDAO()
+ void addLaboratorio(String,String,String)
+ void removeLaboratorio(String)
+ void updateLaboratorio(String,String,String,String)
+ void obtainLaboratori(ArrayList<String>,ArrayList<String>,ArrayList<String>)
+ ArrayList<String[]> getLaboratoriCandidati(String)
+ ArrayList<String[]> getLaboratoriLavoranti(String)
+ ArrayList<String[]> getLaboratori()
+ ArrayList<String[]> createMatrix(ResultSetMetaData,ResultSet)
}
class Controller.Controller {
- DipendenteIndeterminato dipendenteIndeterminato
- DipendenteIndeterminato responsabileScientifico
- DipendenteIndeterminato referenteScientifico
- DipendenteIndeterminato responsabile
- DipendenteProgetto dipendenteProgetto
- ScattoCarriera scattoCarriera
- ScattoCarriera scattoMiddle
- ScattoCarriera scattoSenior
- ScattoCarriera scattoPromossoDirigente
- ScattoCarriera scattoRimossoDirigente
- Laboratorio laboratorio
- Progetto progetto
- Attrezzatura attrezzatura
- ArrayList<DipendenteIndeterminato> elencoAllDipendentiIndeterminati
- ArrayList<DipendenteProgetto> elencoAllDipendentiProgetto
- ArrayList<ScattoCarriera> elencoAllScattiCarriera
- ArrayList<Laboratorio> elencoAllLaboratori
- ArrayList<Progetto> elencoAllProgetti
- ArrayList<Attrezzatura> elencoAllAttrezzature
+ void aggiungiDipendenteIndeterminato(String,String,String,String,String,LocalDate,LocalDate,boolean)
+ void aggiungiDipendenteIndeterminato(String,String,String,String,String,String,LocalDate,LocalDate,boolean)
+ void aggiungiDipendenteIndeterminato(String,String,String,String,String,LocalDate,LocalDate,LocalDate,boolean)
+ void aggiungiDipendenteIndeterminato(String,String,String,String,String,String,LocalDate,LocalDate,LocalDate,boolean)
+ void aggiungiDipendenteProgetto(String,String,String,String,String,LocalDate,LocalDate,LocalDate,BigDecimal,String)
+ void aggiungiDipendenteProgetto(String,String,String,String,LocalDate,LocalDate,LocalDate,BigDecimal,String)
+ void aggiungiAttrezzatura(String,BigDecimal,String,String)
+ void aggiungiAttrezzatura(String,BigDecimal,String)
+ int idAttrezzaturaPiuGrandePlusOne()
+ void aggiungiLaboratorio(String,String,String)
+ void aggiungiProgetto(String,String,BigDecimal,LocalDate,LocalDate,String,String)
+ void aggiungiProgetto(String,String,BigDecimal,LocalDate,String,String)
+ void aggiungiScattoCarriera(String,String,LocalDate)
+ void aggiungiLavorare(String,String)
+ void aggiungiAfferenza(String,String)
+ void modificaDipendenteIndeterminato(String,boolean,String,String,String,String,String,String,LocalDate,LocalDate,LocalDate,boolean)
+ boolean checkResponsabilitaDipendente(String)
+ boolean checkResponsabileScientificoLaboratorioLetture(String)
+ boolean checkResponsabileScientificoLaboratorio(String,String)
+ boolean checkReferenteScientificoProgetto(String)
+ boolean checkNotResponsabileProgetto(String)
+ void ricalcolaScattiCarriera(LocalDate)
+ void removeAllScattiCarrieraDipendente()
+ void removeAllTipoScattiCarrieraDipendente(DipendenteIndeterminato,TipoScatto)
+ void updateDatiAnagraficiDipendenteDatabase(Dipendente,String)
+ void modificaDipendenteProgetto(String,String,String,String,String,String,String,LocalDate,LocalDate,LocalDate,BigDecimal,String)
+ void modificaAttrezzatura(String,String,String,String,BigDecimal,String,String)
+ void modificaAttrezzatura(String,String,String,String,BigDecimal,String)
+ void modificaLaboratorio(String,String,String,String)
+ void modificaProgetto(String,String,String,BigDecimal,LocalDate,LocalDate,String,String)
+ void modificaAfferenza(String,String,String,String)
+ boolean checkDataFineIsAfterAllScadenzaDipProgetto(LocalDate,String)
+ void modificaScattoCarriera(String,String,LocalDate,String,String,LocalDate)
+ boolean checkNotCoerenzaDataAssunzioneDataScatto(String,LocalDate)
+ void modificaLavoro(String,String,String,String)
+ void eliminaLaboratorio(String)
+ void eliminaLavoro(String,String)
+ void eliminaAfferenza(String,String)
+ {static} T getIstanceFromArrayList(ArrayList<T>,String)
+ void insertDipendenteIndeterminatoToDatabase(DipendenteIndeterminato)
+ void insertDipendenteProgettoToDatabase(DipendenteProgetto,Progetto)
+ void insertAutomaticScatti()
+ void insertScattoPromossoDirigenteNow()
+ void insertScattoRimossoDirigenteNow(boolean)
+ void insertAutomaticScatti(DipendenteIndeterminato,LocalDate)
+ LocalDate recuperaDataScattoPiuRecente(DipendenteIndeterminato,TipoScatto)
+ boolean notCoerenzaDate(LocalDate,LocalDate,LocalDate)
+ boolean coerenzaDateFineProgettoDipendente(LocalDate,String)
+ boolean checkIsDipendenteIndeterminato(String)
+ boolean checkIsDipendenteProgetto(String)
+ boolean checkMatricolaUnica(String,String,boolean)
+ boolean checkCupUnico(String,String)
+ boolean checkNomeLabUnico(String)
+ boolean isDipendenteIndeterminatoActive(boolean,String,String)
+ boolean isDipendenteProgettoActive(boolean,String,LocalDate,LocalDate,String)
+ boolean coerenzaCodiceFiscale(String,String,String,LocalDate,String,String,String,LocalDate,boolean)
+ boolean checkMaxLaboratoriLavoranti(boolean,String,String)
+ boolean checkAcquistoAttrezzaturaHalfBudget(boolean,BigDecimal,String,Integer)
+ boolean checkAcquistoDipendenteProgettoHalfBudget(boolean,BigDecimal,String,String)
+ boolean checkNewBudgetIsLegit(BigDecimal,String)
+ BigDecimal getCostoTotaleAttrezzatureProgetto(String)
+ BigDecimal getCostoTotaleDipendentiProgettoProgetto(String)
+ boolean isAlphanumeric(String)
+ boolean verifyDate(String)
+ boolean verifyBigDecimal(String)
+ int verifyDateInterval(LocalDate,String)
+ boolean leggiDipendentiIndeterminati()
+ boolean leggiScattiCarriera()
+ boolean leggiDipendentiProgetto()
+ boolean leggiAttrezzature()
+ boolean leggiLaboratori()
+ boolean leggiProgetti()
+ boolean checkNomeProgettoUnico(String)
+ boolean checkPeriodoLavorativoCoerenteReferenteScientifico(LocalDate,LocalDate,LocalDate,LocalDate)
+ boolean checkPeriodoLavorativoCoerenteResponsabile(boolean,LocalDate,LocalDate,LocalDate,LocalDate)
+ boolean leggiLavorare()
+ boolean checkProgettoIsNotActive(LocalDate)
+ void leggiAfferenze()
+ boolean checkInvalidAfferenza(String)
+ String[] recuperaDipendentiIndeterminati()
+ String[] recuperaDipendentiIndeterminatiBreve()
+ String[] recuperaProgetti()
+ String[] recuperaProgettiNonTerminati()
+ String[] recuperaLaboratori()
+ String[] recuperaLaboratoriLavoranti(String)
+ String[] recuperaLaboratoriCandidati(String)
+ String[] recuperaAllDipendentiCandidatiResponsabileScientifico()
+ String[] recuperaAllDipendentiCandidatiReferenteScientifico(LocalDate,LocalDate)
+ String[] recuperaAllDipendentiCandidatiDirigente(LocalDate,LocalDate)
+ String[] recuperaDipendentiCandidati(String)
+ Object[][] recuperaObjectDipendentiIndeterminati()
+ Object[][] recuperaObjectDipendentiProgetto()
+ Object[][] recuperaObjectAttrezzature()
+ Object[][] recuperaObjectLaboratori()
+ Object[][] recuperaObjectScatti()
+ Object[][] recuperaObjectProgetti()
+ Object[][] recuperaObjectLavori()
+ Object[][] recuperaObjectAfferenze()
+ Object[][] stringArrayListToObjectMatrix(ArrayList<String[]>)
+ String[] stringArrayListToStringArray(ArrayList<String[]>,String[])
+ boolean verificaIntegritaAllPromozioniRimozioni()
+ boolean verificaIntegritaAggiuntaPromozioniRimozioniDipendente(String,String,LocalDate)
+ boolean verificaIntegritaModificaPromozioniRimozioniDipendente(String,String,LocalDate,String,String,LocalDate)
+ LocalDate recuperaDataScattoMenoRecente(DipendenteIndeterminato,TipoScatto)
+ void setElencoAllDipendentiIndeterminati(ArrayList<DipendenteIndeterminato>)
+ void setElencoAllDipendentiProgetto(ArrayList<DipendenteProgetto>)
+ void setElencoAllScattiCarriera(ArrayList<ScattoCarriera>)
+ void setElencoAllLaboratori(ArrayList<Laboratorio>)
+ void setElencoAllAttrezzature(ArrayList<Attrezzatura>)
+ void setElencoAllProgetti(ArrayList<Progetto>)
+ ArrayList<DipendenteIndeterminato> getElencoAllDipendentiIndeterminati()
+ ArrayList<DipendenteProgetto> getElencoAllDipendentiProgetto()
+ ArrayList<ScattoCarriera> getElencoAllScattiCarriera()
+ ArrayList<Laboratorio> getElencoAllLaboratori()
+ ArrayList<Attrezzatura> getElencoAllAttrezzature()
+ ArrayList<Progetto> getElencoAllProgetti()
+ boolean addDipendenteIndeterminatoToElenco(DipendenteIndeterminato)
+ boolean addDipendenteProgettoToElenco(DipendenteProgetto)
+ boolean addScattoCarrieraToElenco(ScattoCarriera)
+ boolean addLaboratorioToElenco(Laboratorio)
+ boolean addAttrezzaturaToElenco(Attrezzatura)
+ boolean addProgettoToElenco(Progetto)
+ void updateDatiAnagraficiDipendenteIndeterminatoInElenco(String,DipendenteIndeterminato)
+ void removeAllScattiCarrieraDipendente(DipendenteIndeterminato)
+ void removeAllTipoScattiDipendente(DipendenteIndeterminato,TipoScatto)
}
class GUI.Laboratorio {
- {static} ImageIcon img_logo_lr
+ JFrame frame
- JTextField nomeTextField
- JTextField topicTextField
- JLabel nomeLable
- JComboBox responsabileScientificoComboBox
- JLabel topicLable
- JLabel responsabileScientificoLable
- JPanel laboratorioPanel
- JButton annullaButton
- JButton okButton
- String vecchioNome
- boolean modificaMode
- AggiornaArea callback
+ <<Create>> Laboratorio(Controller,JFrame,boolean)
+ void setField(Controller,Object[])
+ void setVecchioNome(String)
+ void setAggiornaArea(AggiornaArea)
}
class GUI.AreaAfferenze {
- {static} ImageIcon img_logo_lr
+ JFrame frame
- JPanel areaAfferenzePanel
- JTable afferenzeTable
- JButton indietroButton
- JButton aggiungiButton
- JButton modificaButton
- JButton eliminaButton
- JTextField cercaTextField
- JLabel cercaLabel
- TableModel model
+ <<Create>> AreaAfferenze(Controller,JFrame)
+ void aggiornaSelezione()
+ void aggiornaValori(Controller,String[])
}
class GUI.Lavorare {
- {static} ImageIcon img_logo_lr
+ JFrame frame
- JComboBox progettoComboBox
- JPanel lavorarePanel
- JComboBox laboratorioComboBox
- JButton annullaButton
- JButton okButton
- JLabel progettoLabel
- JLabel laboratorioLabel
- JButton impostaButton
- String vecchioLaboratorio
- String vecchioProgetto
- boolean modificaMode
- AggiornaArea callback
+ <<Create>> Lavorare(Controller,JFrame,boolean)
+ void setField(Controller,Object[])
+ void setVecchioLaboratorio(String)
+ void setVecchioProgetto(String)
+ void setAggiornaArea(AggiornaArea)
}
abstract class Model.Dipendente {
- String matricola
- String nome
- String cognome
- String codFiscale
- String indirizzo
- LocalDate dataNascita
- LocalDate dataAssunzione
# <<Create>> Dipendente(String,String,String,String,LocalDate,LocalDate)
# <<Create>> Dipendente(String,String,String,String,String,LocalDate,LocalDate)
+ void setMatricola(String)
+ void setNome(String)
+ void setCognome(String)
+ void setCodFiscale(String)
+ void setDataNascita(LocalDate)
+ void setDataAssunzione(LocalDate)
+ void setIndirizzo(String)
+ String getMatricola()
+ String getNome()
+ String getCognome()
+ String getCodFiscale()
+ LocalDate getDataNascita()
+ LocalDate getDataAssunzione()
+ String getIndirizzo()
+ boolean equals(Object)
+ String toString()
}
class Model.Progetto {
- String cup
- String nome
- BigDecimal budget
- LocalDate dataInizio
- LocalDate dataFine
- DipendenteIndeterminato responsabile
- DipendenteIndeterminato referenteScientifico
- ArrayList<DipendenteProgetto> dipendentiIngaggiati
- ArrayList<Laboratorio> laboratoriLavoranti
- ArrayList<Attrezzatura> attrezzatureAcquistate
+ <<Create>> Progetto(String,String,BigDecimal,LocalDate,LocalDate,DipendenteIndeterminato,DipendenteIndeterminato)
+ <<Create>> Progetto(String,String,BigDecimal,LocalDate,DipendenteIndeterminato,DipendenteIndeterminato)
+ void setCup(String)
+ void setNome(String)
+ void setBudget(BigDecimal)
+ void setDataInizio(LocalDate)
+ void setDataFine(LocalDate)
+ void setResponsabile(DipendenteIndeterminato)
+ void setReferenteScientifico(DipendenteIndeterminato)
+ String getCup()
+ String getNome()
+ BigDecimal getBudget()
+ LocalDate getDataInizio()
+ LocalDate getDataFine()
+ DipendenteIndeterminato getResponsabile()
+ DipendenteIndeterminato getReferenteScientifico()
+ ArrayList<DipendenteProgetto> getDipendentiIngaggiati()
+ ArrayList<Laboratorio> getLaboratoriLavoranti()
+ ArrayList<Attrezzatura> getAttrezzature()
+ boolean addLaboratorioLavorante(Laboratorio)
+ boolean removeLaboratorioLavorante(Laboratorio)
+ boolean addAttrezzaturaAcquistata(Attrezzatura)
+ boolean removeAttrezzaturaAcquistata(Attrezzatura)
+ boolean addDipendenteIngaggiato(DipendenteProgetto)
+ boolean removeDipendenteIngaggiato(DipendenteProgetto)
+ boolean equals(Object)
+ String toString()
}
interface DAO.ProgettoDAO {
~ void addProgetto(String,String,BigDecimal,LocalDate,LocalDate,String,String)
~ void updateProgetto(String,String,String,BigDecimal,LocalDate,LocalDate,String,String)
~ void obtainProgetti(ArrayList<String>,ArrayList<String>,ArrayList<BigDecimal>,ArrayList<LocalDate>,ArrayList<LocalDate>,ArrayList<String>,ArrayList<String>)
~ ArrayList<String[]> getProgetti()
~ ArrayList<String[]> getProgettiNonTerminati()
~ BigDecimal getCostoTotaleAttrezzature(String)
~ BigDecimal getCostoTotaleDipendentiProgetto(String)
~ ArrayList<String[]> createMatrix(ResultSetMetaData,ResultSet)
}
class GUI.AreaAttrezzatura {
- {static} ImageIcon img_logo_lr
+ JFrame frame
- JPanel areaAttrezzaturaPanel
- JTable attrezzaturaTable
- JTextField cercaTextField
- JButton modificaButton
- JButton indietroButton
- JButton aggiungiButton
- JLabel cercaLabel
- JScrollPane scroll
- TableModel model
+ <<Create>> AreaAttrezzatura(Controller,JFrame)
+ void aggiornaSelezione()
+ void aggiornaValori(Controller,String[])
}
class Model.DipendenteProgetto {
- LocalDate scadenza
- BigDecimal costo
- Progetto progettoProprietario
+ <<Create>> DipendenteProgetto(String,String,String,String,String,LocalDate,LocalDate,LocalDate,BigDecimal,Progetto)
+ <<Create>> DipendenteProgetto(String,String,String,String,LocalDate,LocalDate,LocalDate,BigDecimal,Progetto)
+ void setScadenza(LocalDate)
+ void setCosto(BigDecimal)
+ void setProgettoProprietario(Progetto)
+ LocalDate getScadenza()
+ BigDecimal getCosto()
+ Progetto getProgettoProprietario()
+ boolean equals(Object)
+ String toString()
}
interface DAO.DipendenteIndeterminatoDAO {
~ void addDipendenteIndeterminato(String,String,String,String,String,String,LocalDate,LocalDate,LocalDate,boolean)
~ void updateDipendenteIndeterminato(String,String,String,String,String,String,String,LocalDate,LocalDate,LocalDate,boolean)
~ void updateStatoDirigente(String,boolean)
~ void updateTipoDipendente(String,String)
~ void updateDatiAnagraficiDipendente(String,String,String,String,String,LocalDate)
~ void updateDataAssunzione(String,LocalDate)
~ void obtainDipendentiIndeterminati(ArrayList<String>,ArrayList<String>,ArrayList<String>,ArrayList<String>,ArrayList<String>,ArrayList<String>,ArrayList<LocalDate>,ArrayList<LocalDate>,ArrayList<LocalDate>,ArrayList<Boolean>)
~ ArrayList<String[]> getDipendentiIndeterminati()
~ ArrayList<String[]> getAllDipendentiCandidatiResponsabileScientifico()
~ ArrayList<String[]> getAllDipendentiCandidatiReferenteScientifico(LocalDate,LocalDate)
~ ArrayList<String[]> getAllDipendentiCandidatiDirigente(LocalDate,LocalDate)
~ ArrayList<String[]> getDipendentiCandidatiScatto(String)
~ ArrayList<String[]> createMatrix(ResultSetMetaData,ResultSet)
}
class GUI.AreaScattoCarriera {
- {static} ImageIcon img_logo_lr
+ JFrame frame
- JTable scattoCarrieraTable
- JPanel areaScattoCarrieraPanel
- JButton indietroButton
- JButton aggiungiButton
- JButton modificaButton
- JTextField cercaTextField
- JLabel cercaLabel
- TableModel model
+ <<Create>> AreaScattoCarriera(Controller,JFrame)
+ void aggiornaSelezione()
+ void aggiornaValori(Controller,String[])
}
interface DAO.DipendenteProgettoDAO {
~ void addDipendenteProgetto(String,String,String,String,String,LocalDate,LocalDate,LocalDate,String,BigDecimal)
~ void updateDipendenteProgetto(String,String,String,String,String,String,LocalDate,LocalDate,LocalDate,String,BigDecimal)
~ void updateDatiAnagraficiDipendente(String,String,String,String,String,LocalDate)
~ void obtainDipendentiProgetto(ArrayList<String>,ArrayList<String>,ArrayList<String>,ArrayList<String>,ArrayList<String>,ArrayList<LocalDate>,ArrayList<LocalDate>,ArrayList<LocalDate>,ArrayList<BigDecimal>,ArrayList<String>)
~ ArrayList<String[]> getDipendentiProgetto()
~ ArrayList<String[]> createMatrix(ResultSetMetaData,ResultSet)
}
class ImplementazionePostgresDAO.ScattoCarrieraPostgresDAO {
- Connection connessione
- PreparedStatement preparedStatement
- ResultSet result
- ResultSetMetaData metaData
- ArrayList<String[]> resultMatrix
+ <<Create>> ScattoCarrieraPostgresDAO()
+ void addScattoCarriera(String,String,LocalDate)
+ void removeScattoCarriera(String,String)
+ void removeAllScattiCarrieraDipendente(String)
+ void updateScattoCarriera(String,String,LocalDate,String,String,LocalDate)
+ void obtainScattiCarriera(ArrayList<String>,ArrayList<String>,ArrayList<LocalDate>)
+ ArrayList<String[]> getScattiCarriera()
+ ArrayList<String[]> createMatrix(ResultSetMetaData,ResultSet)
}
class ImplementazionePostgresDAO.DipendenteProgettoPostgresDAO {
- Connection connessione
- ResultSetMetaData metaData
- PreparedStatement preparedStatement
- ResultSet result
- ArrayList<String[]> resultMatrix
+ <<Create>> DipendenteProgettoPostgresDAO()
+ void addDipendenteProgetto(String,String,String,String,String,LocalDate,LocalDate,LocalDate,String,BigDecimal)
+ void updateDipendenteProgetto(String,String,String,String,String,String,LocalDate,LocalDate,LocalDate,String,BigDecimal)
+ void updateDatiAnagraficiDipendente(String,String,String,String,String,LocalDate)
+ void obtainDipendentiProgetto(ArrayList<String>,ArrayList<String>,ArrayList<String>,ArrayList<String>,ArrayList<String>,ArrayList<LocalDate>,ArrayList<LocalDate>,ArrayList<LocalDate>,ArrayList<BigDecimal>,ArrayList<String>)
+ ArrayList<String[]> getDipendentiProgetto()
+ ArrayList<String[]> createMatrix(ResultSetMetaData,ResultSet)
}
interface DAO.LavorareDAO {
~ void addLavorare(String,String)
~ void removeLavorare(String,String)
~ void updateLavorare(String,String,String,String)
~ void obtainLavorare(ArrayList<String>,ArrayList<String>)
~ ArrayList<String[]> getLavorare()
~ ArrayList<String[]> createMatrix(ResultSetMetaData,ResultSet)
}
class ImplementazionePostgresDAO.ProgettoPostgresDAO {
- Connection connessione
- ResultSetMetaData metaData
- PreparedStatement preparedStatement
- ResultSet result
- ArrayList<String[]> resultMatrix
+ <<Create>> ProgettoPostgresDAO()
+ void addProgetto(String,String,BigDecimal,LocalDate,LocalDate,String,String)
+ void updateProgetto(String,String,String,BigDecimal,LocalDate,LocalDate,String,String)
+ void obtainProgetti(ArrayList<String>,ArrayList<String>,ArrayList<BigDecimal>,ArrayList<LocalDate>,ArrayList<LocalDate>,ArrayList<String>,ArrayList<String>)
+ ArrayList<String[]> getProgetti()
+ ArrayList<String[]> getProgettiNonTerminati()
+ BigDecimal getCostoTotaleAttrezzature(String)
+ BigDecimal getCostoTotaleDipendentiProgetto(String)
+ ArrayList<String[]> createMatrix(ResultSetMetaData,ResultSet)
}
class GUI.AreaLaboratorio {
- {static} ImageIcon img_logo_lr
+ JFrame frame
- JTable laboratorioTable
- JPanel areaLaboratorioPanel
- JButton indietroButton
- JButton aggiungiButton
- JButton modificaButton
- JTextField cercaTextField
- JButton eliminaButton
- JLabel cercaLabel
- TableModel model
+ <<Create>> AreaLaboratorio(Controller,JFrame)
+ void aggiornaSelezione()
+ void aggiornaValori(Controller,String[])
}
interface GUI.AggiornaArea {
~ void aggiornaAggiuntaModificaArea()
}
enum Model.TipoDipendente {
+  Junior
+  Middle
+  Senior
}
interface DAO.LaboratorioDAO {
~ void addLaboratorio(String,String,String)
~ void removeLaboratorio(String)
~ void updateLaboratorio(String,String,String,String)
~ void obtainLaboratori(ArrayList<String>,ArrayList<String>,ArrayList<String>)
~ ArrayList<String[]> getLaboratoriCandidati(String)
~ ArrayList<String[]> getLaboratoriLavoranti(String)
~ ArrayList<String[]> getLaboratori()
~ ArrayList<String[]> createMatrix(ResultSetMetaData,ResultSet)
}
class ImplementazionePostgresDAO.AfferirePostgresDAO {
- Connection connessione
- ResultSetMetaData metaData
- PreparedStatement preparedStatement
- ResultSet result
- ArrayList<String[]> resultMatrix
+ <<Create>> AfferirePostgresDAO()
+ void addAfferenza(String,String)
+ void removeAfferenza(String,String)
+ void updateAfferenza(String,String,String,String)
+ void obtainAfferenze(ArrayList<String>,ArrayList<String>)
+ ArrayList<String[]> getAfferenze()
+ ArrayList<String[]> createMatrix(ResultSetMetaData,ResultSet)
}
class GUI.AreaLavorare {
- {static} ImageIcon img_logo_lr
+ JFrame frame
- JPanel areaLavorarePanel
- JTable lavorareTable
- JButton indietroButton
- JButton aggiungiButton
- JButton modificaButton
- JTextField cercaTextField
- JLabel cercaLabel
- JButton eliminaButton
- TableModel model
+ <<Create>> AreaLavorare(Controller,JFrame)
+ void aggiornaSelezione()
+ void aggiornaValori(Controller,String[])
}
class GUI.DipendenteProgetto {
- {static} ImageIcon img_logo_lr
+ JFrame frame
- JTextField nomeTextField
- JPanel dipendenteProgettoPanel
- JTextField cognomeTextField
- JTextField codFiscaleTextField
- JTextField matricolaTextField
- JTextField indirizzoTextField
- JTextField dataNascitaTextField
- JTextField dataAssunzioneTextField
- JTextField scadenzaTextField
- JTextField costoTextField
- JComboBox progettoComboBox
- JCheckBox indirizzoCheckBox
- JCheckBox dataOdiernaAssuzioneCheckBox
- JCheckBox dataOdiernaScadenzaCheckBox
- JLabel nomeLabel
- JLabel cognomeLabel
- JLabel codFiscaleLabel
- JLabel matricolaLabel
- JLabel indirizzoLabel
- JLabel dataNascitaLabel
- JLabel dataAssunzioneLabel
- JLabel scadenzaLabel
- JLabel costoLabel
- JLabel progettoLabel
- JButton okButton
- JButton annullaButton
- String vecchioNome
- String vecchioCognome
- String vecchioCodFiscale
- String vecchiaMatricola
- LocalDate vecchiaDataNascita
- String vecchioProgetto
- boolean modificaMode
- AggiornaArea callback
+ <<Create>> DipendenteProgetto(Controller,JFrame,boolean)
+ void setField(Controller,Object[])
+ void setVecchioNome(String)
+ void setVecchioCognome(String)
+ void setVecchioCodFiscale(String)
+ void setVecchiaMatricola(String)
+ void setVecchiaDataNascita(LocalDate)
+ void setVecchioProgetto(String)
+ void setAggiornaArea(AggiornaArea)
}
class GUI.Attrezzatura {
- {static} ImageIcon img_logo_lr
+ JFrame frame
- JTextField descrizioneTextField
- JTextField costoTextField
- JCheckBox laboratorioCheckBox
- JPanel attrezzaturaPanel
- JLabel descrizioneLable
- JLabel costoLable
- JLabel progettoLable
- JLabel laboratorioLable
- JButton annullaButton
- JButton okButton
- JComboBox<String> laboratorioComboBox
- JComboBox<String> progettoComboBox
- JButton impostaButton
- String vecchioId
- String vecchioProgetto
- String vecchioLaboratorio
- boolean modificaMode
- AggiornaArea callback
+ <<Create>> Attrezzatura(Controller,JFrame,boolean)
+ void setField(Controller,Object[])
+ void setVecchioId(String)
+ void setVecchioProgetto(String)
+ void setVecchioLaboratorio(String)
+ void setAggiornaArea(AggiornaArea)
}
interface DAO.AfferireDAO {
~ void addAfferenza(String,String)
~ void removeAfferenza(String,String)
~ void updateAfferenza(String,String,String,String)
~ void obtainAfferenze(ArrayList<String>,ArrayList<String>)
~ ArrayList<String[]> getAfferenze()
~ ArrayList<String[]> createMatrix(ResultSetMetaData,ResultSet)
}
class Model.ScattoCarriera {
- LocalDate data
- TipoScatto tipoScatto
- DipendenteIndeterminato dipendente
+ <<Create>> ScattoCarriera(LocalDate,TipoScatto,DipendenteIndeterminato)
+ void setData(LocalDate)
+ void setTipoScatto(TipoScatto)
+ void setDipendente(DipendenteIndeterminato)
+ LocalDate getData()
+ TipoScatto getTipoScatto()
+ DipendenteIndeterminato getDipendente()
+ boolean equals(Object)
+ String toString()
}
interface DAO.AttrezzaturaDAO {
~ void addAttrezzatura(String,BigDecimal,String,String)
~ void updateAttrezzatura(Integer,String,BigDecimal,String,String)
~ void obtainAttrezzature(ArrayList<Integer>,ArrayList<String>,ArrayList<BigDecimal>,ArrayList<String>,ArrayList<String>)
~ ArrayList<String[]> getAttrezzature()
~ ArrayList<String[]> createMatrix(ResultSetMetaData,ResultSet)
}
interface DAO.ScattoCarrieraDAO {
~ void addScattoCarriera(String,String,LocalDate)
~ void removeScattoCarriera(String,String)
~ void removeAllScattiCarrieraDipendente(String)
~ void updateScattoCarriera(String,String,LocalDate,String,String,LocalDate)
~ void obtainScattiCarriera(ArrayList<String>,ArrayList<String>,ArrayList<LocalDate>)
~ ArrayList<String[]> getScattiCarriera()
~ ArrayList<String[]> createMatrix(ResultSetMetaData,ResultSet)
}
class ImplementazionePostgresDAO.AttrezzaturaPostgresDAO {
- Connection connessione
- ResultSetMetaData metaData
- PreparedStatement preparedStatement
- ResultSet result
- ArrayList<String[]> resultMatrix
+ <<Create>> AttrezzaturaPostgresDAO()
+ void addAttrezzatura(String,BigDecimal,String,String)
+ void updateAttrezzatura(Integer,String,BigDecimal,String,String)
+ void obtainAttrezzature(ArrayList<Integer>,ArrayList<String>,ArrayList<BigDecimal>,ArrayList<String>,ArrayList<String>)
+ ArrayList<String[]> getAttrezzature()
+ ArrayList<String[]> createMatrix(ResultSetMetaData,ResultSet)
}
class Model.Laboratorio {
- String nome
- String topic
- DipendenteIndeterminato responsabileScientifico
- ArrayList<DipendenteIndeterminato> dipendentiAfferenti
- ArrayList<Attrezzatura> attrezzaturePossedute
- ArrayList<Progetto> progettiLavorati
+ <<Create>> Laboratorio(String,String,DipendenteIndeterminato)
+ void setNome(String)
+ void setTopic(String)
+ void setResponsabileScientifico(DipendenteIndeterminato)
+ String getNome()
+ String getTopic()
+ DipendenteIndeterminato getResponsabileScientifico()
+ ArrayList<DipendenteIndeterminato> getAfferenti()
+ ArrayList<Attrezzatura> getAttrezzaturePossedute()
+ ArrayList<Progetto> getProgettiLavorati()
+ boolean addProgetto(Progetto)
+ boolean removeProgetto(Progetto)
+ boolean addAttrezzatura(Attrezzatura)
+ boolean removeAttrezzatura(Attrezzatura)
+ boolean addAfferente(DipendenteIndeterminato)
+ boolean removeAfferente(DipendenteIndeterminato)
+ boolean equals(Object)
+ String toString()
}
class GUI.AreaDipendenteProgetto {
- {static} ImageIcon img_logo_lr
+ JFrame frame
- JPanel areaDipendenteProgettoPanel
- JTable dipendenteProgettoTable
- JButton indietroButton
- JButton aggiungiButton
- JButton modificaButton
- JTextField cercaTextField
- JLabel cercaLabel
- TableModel model
+ <<Create>> AreaDipendenteProgetto(Controller,JFrame)
+ void aggiornaSelezione()
+ void aggiornaValori(Controller,String[])
}
class Database.ConnessioneDatabase {
- {static} ConnessioneDatabase instance
- Connection connection
- String userName
- String password
- String url
- String driver
- <<Create>> ConnessioneDatabase()
+ {static} ConnessioneDatabase getInstance()
+ Connection getConnection()
}
class GUI.Progetto {
- {static} ImageIcon img_logo_lr
+ JFrame frame
- JLabel cupLable
- JTextField nomeTextField
- JTextField cupTextField
- JTextField budgetTextField
- JTextField dataInizioTextField
- JTextField dataFineTextField
- JLabel nomeLable
- JLabel budgetLable
- JLabel dataInizioLable
- JLabel dataFineLable
- JLabel referenteScientificoLable
- JLabel responsabileLable
- JPanel progettoPanel
- JComboBox referenteScientificoComboBox
- JComboBox responsabileComboBox
- JButton annullaButton
- JButton okButton
- JCheckBox dataFineCheckBox
- JCheckBox dataFineOdiernaCheckBox
- JButton dataFineImpostaButton
- String vecchioCup
- LocalDate vecchiaDataFine
- LocalDate vecchiaDataInizio
- String vecchioReferenteScientifico
- String vecchioResponsabile
- boolean modificaMode
- AggiornaArea callback
- boolean selezionataDataFine
+ <<Create>> Progetto(Controller,JFrame,boolean)
+ void setField(Controller,Object[])
+ void setVecchioCup(String)
+ void setVecchiaDataFine(LocalDate)
+ void setVecchiaDataInizio(LocalDate)
+ void setVecchioReferenteScientifico(String)
+ void setVecchioResponsabile(String)
+ void setAggiornaArea(AggiornaArea)
}
class GUI.DipendenteIndeterminato {
- {static} ImageIcon img_logo_lr
+ JFrame frame
- JPanel dipendenteIndeterminatoPanel
- JTextField nomeTextField
- JTextField cognomeTextField
- JTextField matricolaTextField
- JComboBox tipoComboBox
- JTextField codFiscaleTextField
- JTextField indirizzoTextField
- JTextField dataNascitaTextField
- JTextField dataAssunzioneTextField
- JTextField dataFineTextField
- JCheckBox indirizzoCheckBox
- JCheckBox dirigenteCheckBox
- JCheckBox dataFineCheckBox
- JLabel nomeLabel
- JLabel cognomeLabel
- JLabel matricolaLabel
- JLabel tipoLabel
- JLabel codFiscaleLable
- JLabel indirizzoLable
- JLabel dataNascitaLable
- JLabel dataAssunzioneLable
- JLabel dataFineLable
- JCheckBox dataAssunzioneOdiernaCheckBox
- JCheckBox dataFineOdiernaCheckBox
- JButton okButton
- JButton annullaButton
- String vecchioNome
- String vecchioCognome
- String vecchioCodFiscale
- String vecchiaMatricola
- String vecchioTipo
- LocalDate vecchiaDataNascita
- boolean vecchioDirigente
- boolean modificaMode
- AggiornaArea callback
+ <<Create>> DipendenteIndeterminato(Controller,JFrame,boolean)
+ void setField(Object[])
+ void setVecchioNome(String)
+ void setVecchioCognome(String)
+ void setVecchioCodFiscale(String)
+ void setVecchiaMatricola(String)
+ void setVecchioTipo(String)
+ void setVecchiaDataNascita(LocalDate)
+ void setVecchioDirigente(boolean)
+ void setAggiornaArea(AggiornaArea)
}


DAO.LavorareDAO <|.. ImplementazionePostgresDAO.LavorarePostgresDAO
DAO.DipendenteIndeterminatoDAO <|.. ImplementazionePostgresDAO.DipendenteIndeterminatoPostgresDAO
DAO.LaboratorioDAO <|.. ImplementazionePostgresDAO.LaboratorioPostgresDAO
DAO.ScattoCarrieraDAO <|.. ImplementazionePostgresDAO.ScattoCarrieraPostgresDAO
DAO.DipendenteProgettoDAO <|.. ImplementazionePostgresDAO.DipendenteProgettoPostgresDAO
DAO.ProgettoDAO <|.. ImplementazionePostgresDAO.ProgettoPostgresDAO
DAO.AfferireDAO <|.. ImplementazionePostgresDAO.AfferirePostgresDAO
DAO.AttrezzaturaDAO <|.. ImplementazionePostgresDAO.AttrezzaturaPostgresDAO
Model.Dipendente <|-- Model.DipendenteIndeterminato
Model.Dipendente <|-- Model.DipendenteProgetto
Model.TipoScatto <-- Model.ScattoCarriera : Tipo scatto
Model.TipoDipendente <-- Model.DipendenteIndeterminato : Tipo dipendente
Model.DipendenteIndeterminato *-- "*" Model.ScattoCarriera : Effettua
Model.Laboratorio "*" -- "1" Model.DipendenteIndeterminato : Responsabile scientifico
Model.Laboratorio "*" -- "1..*" Model.DipendenteIndeterminato : Afferire
Model.Laboratorio o-- "*" Model.Attrezzatura : Possedere
Model.Progetto "*" -- "1" Model.DipendenteIndeterminato : Responsabile
Model.Progetto "*" -- "1" Model.DipendenteIndeterminato : Referente scientifico
Model.Progetto "*" -- "*" Model.Laboratorio : Lavorare
Model.Attrezzatura "*" -- "1" Model.Progetto : Acquistare
Model.DipendenteProgetto "*" -- "1" Model.Progetto : Ingaggiare
@enduml